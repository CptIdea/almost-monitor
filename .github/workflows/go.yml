name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
#  linter:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Run golangci-lint
#        uses: golangci/golangci-lint-action@v2.5.2
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.29

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          # skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Build
        run: go build -v -o ./build main.go

      - name: Test
        run: go test -v ./...

      - name: Upload build artifact
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: ./

      - name: load on server
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "./build"
          target: "/opt/almost_status/build"

      - name: restart service
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: ./restart_almost_status.sh
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME}}
          password: ${{ secrets.PASSWORD }}







